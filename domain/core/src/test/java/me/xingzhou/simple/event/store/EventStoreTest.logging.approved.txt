LoggingEvent{level=DEBUG, mdc={}, markers=[], keyValuePairs=[], throwable=Optional.empty, message='save event {} for aggregate {}', arguments=[TestEvent[id=event-id], TestAggregate{id='test-aggregate-id', appliedEvents=[TestEvent[id=event-id], TestEvent[id=event-id]]}]}
LoggingEvent{level=DEBUG, mdc={}, markers=[], keyValuePairs=[], throwable=Optional.empty, message='publish event record: {}', arguments=[StoredRecord[id=1, streamName=test-aggregate-id, eventType=TestEvent, eventContent={"id":"event-id"}, version=0, insertedOn=[Date1]]]}
LoggingEvent{level=DEBUG, mdc={}, markers=[], keyValuePairs=[], throwable=Optional.empty, message='save event {} for aggregate {}', arguments=[TestEvent[id=event-id], TestAggregate{id='test-aggregate-id', appliedEvents=[TestEvent[id=event-id], TestEvent[id=event-id]]}]}
LoggingEvent{level=DEBUG, mdc={}, markers=[], keyValuePairs=[], throwable=Optional.empty, message='publish event record: {}', arguments=[StoredRecord[id=2, streamName=test-aggregate-id, eventType=TestEvent, eventContent={"id":"event-id"}, version=1, insertedOn=[Date2]]]}
LoggingEvent{level=INFO, mdc={}, markers=[], keyValuePairs=[], throwable=Optional.empty, message='enriching {}', arguments=[ProjectionRecorder{appliedEvents=[TestEvent[id=event-id], TestEvent[id=event-id]]}]}
LoggingEvent{level=INFO, mdc={}, markers=[], keyValuePairs=[], throwable=Optional.empty, message='retrieved {} events', arguments=[2]}
LoggingEvent{level=INFO, mdc={}, markers=[], keyValuePairs=[], throwable=Optional.empty, message='applied {} events to {}', arguments=[2, ProjectionRecorder{appliedEvents=[TestEvent[id=event-id], TestEvent[id=event-id]]}]}
